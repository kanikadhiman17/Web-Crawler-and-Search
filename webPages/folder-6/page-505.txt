Identity and Access Management Home Index Search Log In History Latest Changes Mage What Is Delegated Administration? I big part of Mage revolves around something we call delegated administration of accounts, email aliases, service roles, and guests. Mage also still manages a few service authorizations (e.g. eduroam (a.k.a LAWN), and PRISM filespace), but most services are now authorized by either GRS or Grouper, which are much more versatile and robust. The “delegated” part of this is IT admins (a.k.a. CSRs) who operate within their own departments and colleges. OIT grants admin privileges to employees within departments to manage centrally defined accounts, email aliases, etc. These privileges are typically restricted to helping the employees of one department or a group of departments. IAT and Wand (direct your SSH client to mage.gatech.edu) are the UIs that front-end Mage and other back-end services. These front-end apps are IT admins’ primary interface to IAM services. If you need to request administrative access as an IT admin, please see our Requesting Delegated IT Admin Access from IAM page. How to Think About Mage Identity Management’s Mage system manages accounts, email aliases, and employee, student, service, and guest roles. It was put into production in 2005. While it began as our whole identity management (IDM) system, IDM has grown to include GTED and GRS, which now work back and forth with Mage to maintain various IDM data for Georgia Tech. Also BuzzAPI has replaced SQL for programmatic access to Mage data (and several other systems as well). The Mage system itself has three main parts: Database: Mage is primarily a database. This is where accounts, email aliases, and roles of each person at Georgia Tech are stored. The database has stored procedures that implement a low-level API to the data, and they enforce access privileges to the data. User Interface: Mage’s traditional UI is called Wand. This is a terminal-based, text-oriented UI that Mage admins run from mage.gatech.edu via SSH. This is now mostly our legacy UI, which has mostly been replaced by a web app whose capabilities leave Wand in the dust. The new UI, called IAT (IAM Admin Tools), is a UI for much more than just Mage. While we’re still updating our documentation to describe operations in terms of IAT rather than Wand, we encourage all Mage admins to use IAT as their first choice for managing their users. Back-end Processes: There are several back-end processes that are part of the Mage system. Periodic jobs: import data from external sources (e.g. Banner and HCM, generally via GTED these days), groom Mage’s data (e.g. expiring accounts and email aliases), or send out email (e.g. password expiration notices). Continual jobs: These background jobs monitor Mage’s database for changes to accounts, email aliases, and service grants (e.g. LAWN) in real-time. These are the change processors. Service Roles and What They Can Do for You Mage data contains accounts and email aliases. Most of these accounts and aliases represent the people who own them, but sometimes accounts represent things like printers or services, and sometimes email aliases represent help desks or other non-individual, non-personal resources. Non-personal accounts and email aliases belong in service roles, never in personal (employee or student) roles. How to Create a Proper PSA You have to be an IT admin with access to IAT and Wand for this. If that’s not you, you need to find someone to do this for you. TL;DR: Use IAT to create the PSA’s service role. Use Wand to create the PSA itself within that service role. Work with the new admin to set up a password for the PSA and to register it with Duo 2FA. Last, use IAT to upgrade the 2FA assurance level of this new PSA from 25 to 50. Once that’s done, the new admin can request delegated IT admin access for the new PSA. Personal Account An account associated with the owner as a person. This means the account exists under its owner’s employee and/or student role. Service Account: An account that exists only under a service role of its owner. Such accounts do not represent the “person” of the owner. PSA (Privileged Separated Account) A service account designated for administrative use (resetting passwords, managing departmental email aliases, etc.). A PSA should be the only account in its service role. Adding a second PSA to a given person requires a second service role designated for that purpose. A PSA is owned and used by an individual administrator for administrative purposes only. It is never used, for instance, to access email. The PSA’s password MUST be known only to its owner. A PSA is now required when onboarding new administrative users. (And we’re working to transition “legacy” admin accounts to PSAs.) The USG IT Handbook says, “User accounts that have system or administrative privileges granted through group memberships or programs shall have a unique password from other accounts held by that user.” (As of version 2.9.6, see §5.12, the “Protection Requirements” paragraph, item 7.) An admin account must be distinct from the admin’s personal account in order to have a distinct password from the admin’s personal account’s password. We also want admin accounts to be used only for administrative purposes, so we provide a measure of separation between the admin as a person and the admin account by locating the account in a service role. So a PSA must be separate from the person (i.e. not associated with the ower’s employee or student roles) and not use the same password as any of the corresponding person’s other accounts. If you’re not already familiar with service roles, go back and look at that now. What follows builds on that. Instructions for Creating a PSA You can skip these first steps if this PSA is going to be created for someone who already has an appropriate service role. Look up the new admin in IAT. Make sure you’re on the “Person” tab in IAT. Open the “Service Roles” section. Click the “Add Service Role” button at the bottom of that section. The name (title) of the service role should be “PSA” followed by some description of the administrative sphere in view for the account we’ll create below. For example, “PSA - College of Architecture” would be a good service role title for someone whose administrative operations will be confined to that college. Be tersely descriptive, and use your own judgment. Once you know you have a good service role to put this new PSA in … Use an ssh client to log in to mage.gatech.edu. Run the “wand” command. Find the person who needs this new PSA. (Press the [/] key to search.) Make sure you’re at the “User” level of this UI by pressing the [u] key if necessary. Go to the “Account Ownership” tap by pressing the [a] key. Press [C] (that’s upper-case) to create a new account. Use the up and down arrows to highlight the PSA service role. Then press [Enter]. You’ll first be asked why you’re creating this account. If there’s a ServiceNow ticket involved, you should mention the ticket number somewhere in this comment. You’ll then be asked the name of the new account. This is often simply “psa-“ prepended to the user’s primary account name. For example, for someone whose primary account is jdoe27, you might enter psa-jdoe27 for the name of this new PSA. Another popular idea is to use some abbreviation of the applicable college or department (e.g. coa-) as the prefix (if the new PSA is being provisioned for access to people in the College of Architecture). Once you enter the account name of the PSA into Wand, that account will be created under the service role you’ve designated, but it will be a while before all our systems recognize it. To speed this up, you can go back to IAT and click the “Refresh Data” button at the top of the window for this person. IMPORTANT: Three things MUST be done before requesting administrative privileges for this new admin account. Password resets don’t work on accounts that have admin privileges, so the admin account’s initial password reset (to generate the temporary password) MUST be done before requesting admin privileges for the new account. All admin accounts MUST be enrolled for Duo 2-factor authentication, or they won’t be able to use Wand or IAT. THIS MUST NOT BE DONE USING A DUO ALIAS! Duo aliases bypass the mechanism that creates GTED entitlements, thereby keeping many GT systems from recognizing the PSA as enrolled in 2FA. Let the new admin use Passport for this. All admin accounts MUST have a 2FA assurance level of at least 50. You can see the current assurance level in IAT by looking up the PSA and opening the Duo section of that account’s tab. If the assurance level is less than 50, there will be an “Upgrade Assurance Level” button. Click that button and answer the questions. Once these details have been completed, then-and-only-then the new admin can follow the How to Request Access as a Mage Admin instructions (below) to request admin privileges. How to Request Access as a Mage Admin See our Requesting Delegated IT Admin Access form IAM article for detailed information about requesting either read-only access in IAT or full administrative privileges in IAT and Wand. Connecting to mage.gatech.edu Most IT administrative functions are available through IAT at this point, but there are still a few things you have to do from the older-and-“soon”-to-be-retired “wand” command, still available via SSH on mage.gatech.edu. In order to SSH to mage.gatech.edu (or just Mage), you need to have an SSH client. Any ssh client available to you can likely be made to work, but OIT supports only SecureCRT if you’re on a Windows workstation. If you’re running macOS, the built-in “terminal” app is fine. If you’re on Linux, we presume you already know your way around ssh, so do what you normally do. If you’re using SecureCRT, just be sure to set your terminal emulation to “linux.” You also stand about a 50% chance of having to change the character your backspace key sends either from backspace to delete, or from delete to backspace. We can walk you through that if you run into trouble there. Two rules for connecting to mage.gatech.edu via the SSH protocol: The machine your ssh client is running on MUST be on Georgia Tech’s network. If you’re connecting from an off-campus machine, that means you have to be on Georgia Tech’s VPN. The machine your ssh client is running on MUST be in DNS somewhere under the gatech.edu domain. If you’re on our VPN, this is done for you. Otherwise, you might need to contact your department’s network people about adding your workstation to Georgia Tech’s DNS service. CAVEAT: Once you’re logged into mage.gatech.edu, you’ll run the “wand” command to use that interface to Mage. BUT … make sure your terminal window is at least 80 columns wide and 25 lines high, though you’re welcome to make it larger if you want to. JUST DON’T MAKE YOUR WINDOW SMALLER WHILE YOU’RE RUNNING WAND. Doing so often crashes the UI. Nothing will go seriously wrong. You’ll just have a mess on your screen, and running the “wand” command again will get you back in. How to Early-on-board a New Employee More information is available on our Early Onboarding page, but here’s the gist. There might be a handful of days between a new employee’s first day of work and when USG’s HR software lets IAM know about the new person. Our early on-boarding procedure is available to fill this gap. Get into Wand and look up the new employee by name, GTID, or account. If you find the employee by account name, you’ll need to press [u] to change from the Account view to the User view. If you see an employee role already listed, you’re done. The employee role already exists. Otherwise, make sure you’re on the Roles and Accounts tab by pressing [r]. Press [T] to create a “temporary” role for this person. If prompted for role type, choose to create an employee role. Choose a department from the list. You can type text to narrow the list to something more manageable. Give a brief description of why you’re creating this new employee role. An account will either be assigned (from an existing student role) or created (if no suitable account already exists). In the latter case … Highlight the new account in Wand and press [Enter] to view the account. Press [R] to reset (and [Y] to confirm) the password for the new account. A good-for-48-hours password will be displayed on the screen. Give the new employee this password via some secure means. Reasonable options are … Press [Q] to print a “user square.” This will print a page to whatever print your terminal emulator prints to. Jot the password down on a Post-It. Call the employee and read the new password over the phone. The theme here is direct interaction with the user. (Email is not considered direct interaction.) The user may then log in to Passport with the temporary password and set a new password from there. The Future of PSAs Starting Point (in September of 2022) PSAs are service accounts, and Passport does not allow self-service resets of service accounts’ passwords. We’re considering exempting PSAs from this general service account restriction. Also regarding PSA passwords, USG policy states they may not be the same as the passwords for personal accounts. We’d like to enforce this, likely at the BuzzAPI level. Management of admin privileges is still mostly manual and centralized in IAM. Admin groups exist, but we manage those manually. Privilege sets are also managed manually. Privileges are centrally managed in a version-controlled Python script. Admin privileges are tricky to change in this crufty script. Very few people are equipped to manage admin privileges. Onboarding new admins is labor-intensive and error-prone. Offboarding departing admins is not as automatic as we’d like. Where We’re Headed</h3> Management of admin privileges is decentralized and managed using Grouper. Admin groups are in Grouper. “Liaison admins” manage group membership. IAM adds (in Grouper) only the first liaison for a given admin group. That liaison manages both the liaison group memberships and the admin group memberships from that point forward. IAM manages privilege sets and assigns them to admin groups. Admin privilege changes are largely decentralized and simple. Onboarding new admins is simple and more publicly auditable. Offboarding departing admins is automatic. Last edited by Jeff M Clough, 2022-11-28 11:35:31 Short link to this page Emergency Information Legal & Privacy Information Accessibility Accountability Accreditation Employment © 2014 Georgia Institute of Technology