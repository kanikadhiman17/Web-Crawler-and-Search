Identity and Access Management Home Index Search Log In History Latest Changes Georgia Tech Enterprise Directory (GTED) The Georgia Tech Enterprise Directory (GTED) is a data system to house information about Georgia Tech’s computer accounts and the people who use them. GTED is the primary data-storage component of its parent Campus-IAM project. Based on Fedora 389 Directory GTED is a large LDAP system capable of campus wide data and authentication needs. Unlike many other directories on campus, GTED is built to underpin the people- and account-information needs of IT systems; not to serve end-users’ need to lookup phone numbers or email addresses. To summarize the details available here, GTED is a tool for IT systems to understand, provision, and authorize both departmental and central computer accounts. GTED also offers the abilities for departments to override, modify or enhance the data known about their people and accounts. Getting Started While the official process is started with the GTED Service Signup Form (link forthcoming), it asks for several details about the data your systems require. Therefore, we recommend the following approach: Read the material available here about the GTED service and its data Setup a meeting with the project leads via email to discuss your systems and applications and how GTED can best help Fill out the Signup Form Once the request form is received, the requester, the GTED team and the data stewards work together to understand, document, and (hopefully) approve access. Once data-stewardship approvals are made, GTED credentials and data access will be granted. Please note that data-access requesting and approval is between the requester and the data stewards; the GTED team’s role is to facilitate: map IT needs into business data by clarifying any questions about from where GTED data is derived. GTED Goals and Differences between GTED and other (GT) Directories While Georgia Tech has many LDAP directories and other data sources already, GTED has many useful aspects not previously found together at Georgia Tech: Realtime Updates Changes to data within Banner, PeopleSoft and Mage are available from GTED within minutes. Standard Schemas GTED conforms to IETF and EduCause schema standards (inetOrgPerson andeduPerson) so off-the-shelf applications can use the data within the directory without modification. Normalized data and people GTED pulls information about individuals together into a person-registry. People with multiple roles across campus are stored as individuals, not as multiple individuals. Guests Guests created and sponsored within Passport are reflected within GTED. Besides lacking GTIDs, having sponsors and lacking student or employment records, these individuals are not otherwise structured differently than any other campus member. Therefore, if desired, services tied intoG TED can easily authorize and serve guests. Writable Each department has a branch within GTED where the objects are populated and maintained by the GTED service, but where applications with the department can modify them: overriding or defining data elements. Extensible New, department-specific attributes can be stored within centrally managed GTED servers. This is expected to greatly reduce the need for department-specific databases or directories, eliminating significant maintenance costs, security risks and user frustration. Overridable As mentioned above, GTED is rapidly updated with changes to centrall yknown data (from Banner, PeopleSoft, Mage, etc). However, departments can disable updating of (and create local definitions of) most of an individual’s attributes. Highly available GTED is deployed on multiple servers and power feeds. Its availability will increase as servers are deployed to different corners of campus as well as to remote campuses. Current and historical course information All of an individual’s course registrations, dorm residences and instructor assignments are available for use with application authorization rules. Also, Active and Upcoming courses are separately available for use within authorizations that are consistent across semesters. Note: there are several data elements which are not stored historically. Multiple Jobs GTED contains information about all the jobs an individual may have with different GT departments. Complete Account information All of an individual’s accounts are present within GTED and are documented accordingly. This includes primary and ‘departmental’ GT accounts as well as accounts issued by departments imported into or synchronized with GTED. Local usernames Over the years, GT departments have issued conflicting usernames to their constituents: The ‘jdoe’ account in ISyE might be owned by a different person than ‘jdoe’ in CoC. GTED’s organization into departmental branches allows all these accounts to coexist. The use of GTED does not require any changes to usernames. Federation As an eduPerson-compliant directory, it is most likely that GTED’s reflection of GT Accounts will be the first to be supported by any GTShibboleth infrastructure. It is not known when Shibboleth (or otherFederation technologies) will be deployed. Email addressing While individuals at GT have (at most) two published email addresses, GTED will store all email addresses stored for individuals within its connected data sources. Operational Considerations Please use Footprints to report GTED service failures or access problems: - via a Footprintsweb request or, - if you have direct Footprints access, assigned to Application Support/ Identity and Access Mgt / IAM-General. OIT Operations can investigate and contact a service engineer 24x7: 404-894-4669. Joining and posting to the gted@lists.gatech.edu mailing list is probably the best place for “How do I do xyz?” or similar questions. Mailing list for announcements and discussion: gted@lists.gatech.edu Scheduled Downtime: gted Functionality scheduled downtime frequency Day/hour r.gted.gatech.edu access: binding and reading data None n/a rw.gted.gatech.edu access: modifying data Monthly First Sat of month 05:00-07:00 GTED Data maintenance Weekly Saturday 12:00-14:00 Documentation Architecture information can be found here. GTED data dictionary (what the values in GTED mean, and how they were derived): GTED Data Dictionary Some detailed pages of various GTED attributes: Attribute Descriptions. Employee information is documented here. Name information (First name, last name, etc) is documented here. When you request and receive a GTED access account, here is some useful introductory info, and some useful queries: Welcome to GTED! Some more GTED querying information is avail here. GTED queries Some GTED data is available in SQL form in the Data Warehouse. Permission has to be granted via the above mentioned request form. Here is further explanation of our Data Warehouse SQL tables of GTED data. http://iamweb1.iam.gatech.edu/docs/services/GTED-Datawarehouse-tables Some IAM lifecycle technical information for developers can be downloaded from here. Affiliations Gted data contains, among other things, information on a persons affiliations to GT. For example, student, employee, guest, former, based on eduPerson standards. This is commonly used for authorization in applications, and a person can belong to more than one of these groupings. So here is a cheatsheet on these affiliations. Data flow For understanding how data flows from source systems into GT identity systems, [examine this diagram] The eduPerson standard for some GTED attributes is documented here: http://software.internet2.edu/eduperson/internet2-mace-dir-eduperson-201602.html Identity Lifecycles Descriptions of how identities evolve at GT Maintaining a downstream copy of GTED data When you are maintaining a copy of data from GTED, there are several ways to keep your copy up to date. There are two main considerations for your approach: How many GTED records your are targeting and how timely you want your replica to be. The following chart helps breaks down and recommend approaches. Size Timeliness Recommendation Small (<1000) 15+ minutes Periodic Full Refresh Large (>1000) 12-24 hours Periodic Full Refresh Any size 0-15 minutes Triggered with Refresh Periodic Full Refresh There are three ways to get a dump from GTED: * via REST from BuzzApi central.iam.gted.{people,accounts} - Good up to 5k records * via ldap from ldaps://r-bigops.gted.gatech.edu - Good up to 10k records, pretty painful after 30k records * via GTED tables in DWPROD - Good for arbitrary number of records Once you have a copy of the GTED data you need, comparing and updating your replica can be tedious, but it isn’t very complicated. Triggered with Refresh The IAM team has a queuing system – The Unified Changelog (aka UCL) – that notifies downstream processes of changes within GTED. For lots of reasons, these queue events describe Who changed but Not What changed about them. When you receive a queue event, you should read that individual from GTED, verify/update your replica, and mark the event as completed (or errored). With more details: LOOP FOREVER: 
1) Search central.iam.queues.work_items with system_name='XXX' and feed_name='YYY'. This will return an array of queued identities that you should process. 
[
  {
    "feed_name": "buzzcard",
    "id": "902914064",
    "id_type": "gtid",
    "item_status": "",
    "item_status_message": "",
    "system_name": "pharos",
    "work_item_ref": "KCA2OTExNjc2NTYgKQ=="
  },
  {
    "feed_name": "buzzcard",
    "id": "900093650",
    "id_type": "gtid",
    "item_status": "",
    "item_status_message": "",
    "system_name": "pharos",
    "work_item_ref": "KCA2OTQwODU5NjEgKQ=="
  }
]
 
2) Loop through the results (if any, of course): 
    a) Make sure the id_type is 'gtid' and then process the gtid mentioned in the 'id'

    b) Read the GTED data (ldap: rw-alt.gted, REST: Use Master/data supplier, SQL: Not supported)
 
    c) After each result is processed, update central.iam.queues.work_items: 
work_item_ref: the value from the item that you want to update
status: 'done' if you were successful, 'excluded' if you were not
status_comment: A few details about what you did (something like 'no updates were necessary' or 'added new record' or 'updated existing record' or 'not authorized for pharos', etc) or what is wrong ('could not talk with gted', 'pharos not available', 'update failed', etc)
 
NOTE: Events that you mark as 'excluded' will go back into the back of the queue and come back to you for reprocessing in an exponentially backed-off way.  
 
3) After the batch of entries have been processed, Sleep for 5 seconds before going back to (1). You can make this conditional (1 second if (1) returned entries, 15-30 seconds if (1) returned no entries) to keep things flowing as fast as possible when there is work to do, but not beating on the system when there is not work to do.
 
 
A few comments: 
a) Events can arrive in different priorities. In order to process high-priority events in a timely manner, you don't want to be stuck in (2) with a long list of lower-priority events that existed before the higher-priority events were created. Therefore, it can be a good idea to abort (2) after a couple minutes; Just don't update the events you didn't process and you'll get them back right away when you go back to (1) if they remain at the front of the queue.
 
b) You can use Create central.iam.queues.work_items to add an entry to a queue, perhaps to refresh an individual that needs to be fixed, create an entry for testing, or to create 1000s of entries on a schedule to do a full-refresh every day or week. You can use Read central.iam.queues.work_items (with work_item_ref) to check on the status and message of an entry you create and to loop until it has been completed. Getting Started with Triggering The IAM team needs to set up a queue for you, named for the target system and source system, typically ‘gted.’ Please send the following to iam-support@oit.gatech.edu Subject: UnifiedChangelog Feed Requested

Name of your system (short)
Technology description
What host(s) read this queue
What process on the host(s) reads the queue
Contact info (in case you're queue is building up)
What ID (gtGTID, uid, etc) do you want to identify the changed entity
What branch(es) of GTED do you care about (people, branches or both)
What attributes do you want to trigger on, and which are Low, Med, High priority? Full Refreshes and Triggering A full-read/full-compare can be written along side with your trigger-fed process. This typically means writing your processing twice. While it is much slower (probably 5x slower), you can also inject Refresh events into your queue to reprocess a population. This effectively reuses the trigger-fed process to perform a full refresh. The Big Read Refresh Button in IAT You can trigger an individual in your queue with the “Refresh Data” button. FAQs and Errors Keywords: spider spyder gted affiliation diagram Last edited by John M Bryson, 2023-01-11 13:47:47 Short link to this page Emergency Information Legal & Privacy Information Accessibility Accountability Accreditation Employment © 2014 Georgia Institute of Technology